# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Velox backend 

on:
  pull_request:
    paths:
      - '.github/**'
      - 'pom.xml'
      - 'backends-velox/**'
      - 'gluten-celeborn/**'
      - 'gluten-core/**'
      - 'gluten-data/**'
      - 'gluten-delta/**'
      - 'gluten-ut/**'
      - 'shims/**'
      - 'tools/gluten-it/**'
      - 'tools/gluten-te/**'
      - 'ep/build-velox/**'
      - 'cpp/*'
      - 'cpp/CMake/**'
      - 'cpp/velox/**'
      - 'cpp/core/**'
      - 'dev/**'

env:
  HTTP_PROXY_HOST: proxy-shz.intel.com
  HTTP_PROXY_PORT: 911
  PATH_TO_GLUTEN_TE: ./tools/gluten-te
  DOCKER_PULL_REGISTRY: 10.1.0.25:5000
  MAVEN_OPTS: -Dmaven.wagon.http.retryHandler.count=3

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  ubuntu2004-test-spark32:
    runs-on: velox_backend
    env:
      OS_IMAGE_NAME: ubuntu
      OS_IMAGE_TAG: 20.04
    steps:
      - uses: actions/checkout@v4
      - name: Setup docker container
        run: |
          $PATH_TO_GLUTEN_TE/$OS_IMAGE_NAME/gha/gha-checkout/checkout.sh
      - name: Build Gluten velox third party
        run: |
          $PATH_TO_GLUTEN_TE/$OS_IMAGE_NAME/gha/gha-checkout/exec.sh '
          cd /opt/gluten/ep/build-velox/src && \
          ./get_velox.sh --velox_home=/opt/velox && \
          ./build_velox.sh --run_setup_script=ON --velox_home=/opt/velox --enable_ep_cache=ON --build_test_utils=ON'
      - name: Build Gluten CPP library
        run: |
          $PATH_TO_GLUTEN_TE/$OS_IMAGE_NAME/gha/gha-checkout/exec.sh '
          cd /opt/gluten/cpp && \
          ./compile.sh --build_velox_backend=ON --velox_home=/opt/velox --build_tests=ON --build_examples=ON --build_benchmarks=ON'
      - name: Run CPP unit test
        run: |
          $PATH_TO_GLUTEN_TE/$OS_IMAGE_NAME/gha/gha-checkout/exec.sh 'cd /opt/gluten/cpp/build && \
          ctest -V'
      - name: Run HBM CPP unit test
        run: |
          $PATH_TO_GLUTEN_TE/$OS_IMAGE_NAME/gha/gha-checkout/exec.sh 'cd /opt/gluten/cpp/build && \
          cmake -DBUILD_TESTS=ON -DENABLE_HBM=ON .. && \
          cmake --build . --target hbw_allocator_test -- -j && \
          ctest -V -R TestHbw'
      - name: Build and run unit test for Spark 3.2.2 (other tests)
        run: |
          $PATH_TO_GLUTEN_TE/$OS_IMAGE_NAME/gha/gha-checkout/exec.sh '
          cd /opt/gluten && \
          mvn clean install -Pspark-3.2 -Pspark-ut -Pbackends-velox -Prss -DargLine="-Dspark.test.home=/opt/spark322" -DtagsToExclude=org.apache.spark.tags.ExtendedSQLTest,io.glutenproject.tags.UDFTest,io.glutenproject.tags.SkipTestTags && \
          mvn test -Pspark-3.2 -Pbackends-velox -DtagsToExclude=None -DtagsToInclude=io.glutenproject.tags.UDFTest'
      # Cpp micro benchmarks will use generated files from unit test in backends-velox module.
      - name: Run micro benchmarks
        run: |
          $PATH_TO_GLUTEN_TE/$OS_IMAGE_NAME/gha/gha-checkout/exec.sh 'cd /opt/gluten/cpp/build/velox/benchmarks && \
          ./generic_benchmark --run-example --with-shuffle --threads 1 --iterations 1'
      - name: Exit docker container
        if: ${{ always() }}
        run: |
          $PATH_TO_GLUTEN_TE/$OS_IMAGE_NAME/gha/gha-checkout/clean.sh
